// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1/generated.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

//
//Copyright The Kubernetes Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// ConversionRequest describes the conversion request parameters.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// uid is an identifier for the individual request/response. It allows distinguishing instances of requests which are
  /// otherwise identical (parallel requests, etc).
  /// The UID is meant to track the round trip (request/response) between the Kubernetes API server and the webhook, not the user request.
  /// It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
  var uid: String {
    get {return _uid ?? String()}
    set {_uid = newValue}
  }
  /// Returns true if `uid` has been explicitly set.
  var hasUid: Bool {return self._uid != nil}
  /// Clears the value of `uid`. Subsequent reads from it will return its default value.
  mutating func clearUid() {self._uid = nil}

  /// desiredAPIVersion is the version to convert given objects to. e.g. "myapi.example.com/v1"
  var desiredApiversion: String {
    get {return _desiredApiversion ?? String()}
    set {_desiredApiversion = newValue}
  }
  /// Returns true if `desiredApiversion` has been explicitly set.
  var hasDesiredApiversion: Bool {return self._desiredApiversion != nil}
  /// Clears the value of `desiredApiversion`. Subsequent reads from it will return its default value.
  mutating func clearDesiredApiversion() {self._desiredApiversion = nil}

  /// objects is the list of custom resource objects to be converted.
  var objects: [K8s_Io_Apimachinery_Pkg_Runtime_RawExtension] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _uid: String? = nil
  fileprivate var _desiredApiversion: String? = nil
}

/// ConversionResponse describes a conversion response.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// uid is an identifier for the individual request/response.
  /// This should be copied over from the corresponding `request.uid`.
  var uid: String {
    get {return _storage._uid ?? String()}
    set {_uniqueStorage()._uid = newValue}
  }
  /// Returns true if `uid` has been explicitly set.
  var hasUid: Bool {return _storage._uid != nil}
  /// Clears the value of `uid`. Subsequent reads from it will return its default value.
  mutating func clearUid() {_uniqueStorage()._uid = nil}

  /// convertedObjects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
  /// The webhook is expected to set `apiVersion` of these objects to the `request.desiredAPIVersion`. The list
  /// must also have the same size as the input list with the same objects in the same order (equal kind, metadata.uid, metadata.name and metadata.namespace).
  /// The webhook is allowed to mutate labels and annotations. Any other change to the metadata is silently ignored.
  var convertedObjects: [K8s_Io_Apimachinery_Pkg_Runtime_RawExtension] {
    get {return _storage._convertedObjects}
    set {_uniqueStorage()._convertedObjects = newValue}
  }

  /// result contains the result of conversion with extra details if the conversion failed. `result.status` determines if
  /// the conversion failed or succeeded. The `result.status` field is required and represents the success or failure of the
  /// conversion. A successful conversion must set `result.status` to `Success`. A failed conversion must set
  /// `result.status` to `Failure` and provide more details in `result.message` and return http status 200. The `result.message`
  /// will be used to construct an error message for the end user.
  var result: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Status {
    get {return _storage._result ?? K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Status()}
    set {_uniqueStorage()._result = newValue}
  }
  /// Returns true if `result` has been explicitly set.
  var hasResult: Bool {return _storage._result != nil}
  /// Clears the value of `result`. Subsequent reads from it will return its default value.
  mutating func clearResult() {_uniqueStorage()._result = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// ConversionReview describes a conversion request/response.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionReview {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// request describes the attributes for the conversion request.
  /// +optional
  var request: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest {
    get {return _storage._request ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest()}
    set {_uniqueStorage()._request = newValue}
  }
  /// Returns true if `request` has been explicitly set.
  var hasRequest: Bool {return _storage._request != nil}
  /// Clears the value of `request`. Subsequent reads from it will return its default value.
  mutating func clearRequest() {_uniqueStorage()._request = nil}

  /// response describes the attributes for the conversion response.
  /// +optional
  var response: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse {
    get {return _storage._response ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse()}
    set {_uniqueStorage()._response = newValue}
  }
  /// Returns true if `response` has been explicitly set.
  var hasResponse: Bool {return _storage._response != nil}
  /// Clears the value of `response`. Subsequent reads from it will return its default value.
  mutating func clearResponse() {_uniqueStorage()._response = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceColumnDefinition specifies a column for server side printing.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// name is a human readable name for the column.
  var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  mutating func clearName() {self._name = nil}

  /// type is an OpenAPI type definition for this column.
  /// See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  var type: String {
    get {return _type ?? String()}
    set {_type = newValue}
  }
  /// Returns true if `type` has been explicitly set.
  var hasType: Bool {return self._type != nil}
  /// Clears the value of `type`. Subsequent reads from it will return its default value.
  mutating func clearType() {self._type = nil}

  /// format is an optional OpenAPI type definition for this column. The 'name' format is applied
  /// to the primary identifier column to assist in clients identifying column is the resource name.
  /// See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  /// +optional
  var format: String {
    get {return _format ?? String()}
    set {_format = newValue}
  }
  /// Returns true if `format` has been explicitly set.
  var hasFormat: Bool {return self._format != nil}
  /// Clears the value of `format`. Subsequent reads from it will return its default value.
  mutating func clearFormat() {self._format = nil}

  /// description is a human readable description of this column.
  /// +optional
  var description_p: String {
    get {return _description_p ?? String()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  /// priority is an integer defining the relative importance of this column compared to others. Lower
  /// numbers are considered higher priority. Columns that may be omitted in limited space scenarios
  /// should be given a priority greater than 0.
  /// +optional
  var priority: Int32 {
    get {return _priority ?? 0}
    set {_priority = newValue}
  }
  /// Returns true if `priority` has been explicitly set.
  var hasPriority: Bool {return self._priority != nil}
  /// Clears the value of `priority`. Subsequent reads from it will return its default value.
  mutating func clearPriority() {self._priority = nil}

  /// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against
  /// each custom resource to produce the value for this column.
  var jsonpath: String {
    get {return _jsonpath ?? String()}
    set {_jsonpath = newValue}
  }
  /// Returns true if `jsonpath` has been explicitly set.
  var hasJsonpath: Bool {return self._jsonpath != nil}
  /// Clears the value of `jsonpath`. Subsequent reads from it will return its default value.
  mutating func clearJsonpath() {self._jsonpath = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _name: String? = nil
  fileprivate var _type: String? = nil
  fileprivate var _format: String? = nil
  fileprivate var _description_p: String? = nil
  fileprivate var _priority: Int32? = nil
  fileprivate var _jsonpath: String? = nil
}

/// CustomResourceConversion describes how to convert different versions of a CR.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// strategy specifies how custom resources are converted between versions. Allowed values are:
  /// - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource.
  /// - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
  ///   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
  var strategy: String {
    get {return _storage._strategy ?? String()}
    set {_uniqueStorage()._strategy = newValue}
  }
  /// Returns true if `strategy` has been explicitly set.
  var hasStrategy: Bool {return _storage._strategy != nil}
  /// Clears the value of `strategy`. Subsequent reads from it will return its default value.
  mutating func clearStrategy() {_uniqueStorage()._strategy = nil}

  /// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
  /// Required when `strategy` is set to `Webhook`.
  /// +optional
  var webhookClientConfig: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig {
    get {return _storage._webhookClientConfig ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig()}
    set {_uniqueStorage()._webhookClientConfig = newValue}
  }
  /// Returns true if `webhookClientConfig` has been explicitly set.
  var hasWebhookClientConfig: Bool {return _storage._webhookClientConfig != nil}
  /// Clears the value of `webhookClientConfig`. Subsequent reads from it will return its default value.
  mutating func clearWebhookClientConfig() {_uniqueStorage()._webhookClientConfig = nil}

  /// conversionReviewVersions is an ordered list of preferred `ConversionReview`
  /// versions the Webhook expects. The API server will use the first version in
  /// the list which it supports. If none of the versions specified in this list
  /// are supported by API server, conversion will fail for the custom resource.
  /// If a persisted Webhook configuration specifies allowed versions and does not
  /// include any versions known to the API Server, calls to the webhook will fail.
  /// Defaults to `["v1beta1"]`.
  /// +optional
  var conversionReviewVersions: [String] {
    get {return _storage._conversionReviewVersions}
    set {_uniqueStorage()._conversionReviewVersions = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format
/// <.spec.name>.<.spec.group>.
/// Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var metadata: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ObjectMeta {
    get {return _storage._metadata ?? K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ObjectMeta()}
    set {_uniqueStorage()._metadata = newValue}
  }
  /// Returns true if `metadata` has been explicitly set.
  var hasMetadata: Bool {return _storage._metadata != nil}
  /// Clears the value of `metadata`. Subsequent reads from it will return its default value.
  mutating func clearMetadata() {_uniqueStorage()._metadata = nil}

  /// spec describes how the user wants the resources to appear
  var spec: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec {
    get {return _storage._spec ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec()}
    set {_uniqueStorage()._spec = newValue}
  }
  /// Returns true if `spec` has been explicitly set.
  var hasSpec: Bool {return _storage._spec != nil}
  /// Clears the value of `spec`. Subsequent reads from it will return its default value.
  mutating func clearSpec() {_uniqueStorage()._spec = nil}

  /// status indicates the actual state of the CustomResourceDefinition
  /// +optional
  var status: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus {
    get {return _storage._status ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus()}
    set {_uniqueStorage()._status = newValue}
  }
  /// Returns true if `status` has been explicitly set.
  var hasStatus: Bool {return _storage._status != nil}
  /// Clears the value of `status`. Subsequent reads from it will return its default value.
  mutating func clearStatus() {_uniqueStorage()._status = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinitionCondition contains details for the current condition of this pod.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  var type: String {
    get {return _storage._type ?? String()}
    set {_uniqueStorage()._type = newValue}
  }
  /// Returns true if `type` has been explicitly set.
  var hasType: Bool {return _storage._type != nil}
  /// Clears the value of `type`. Subsequent reads from it will return its default value.
  mutating func clearType() {_uniqueStorage()._type = nil}

  /// status is the status of the condition.
  /// Can be True, False, Unknown.
  var status: String {
    get {return _storage._status ?? String()}
    set {_uniqueStorage()._status = newValue}
  }
  /// Returns true if `status` has been explicitly set.
  var hasStatus: Bool {return _storage._status != nil}
  /// Clears the value of `status`. Subsequent reads from it will return its default value.
  mutating func clearStatus() {_uniqueStorage()._status = nil}

  /// lastTransitionTime last time the condition transitioned from one status to another.
  /// +optional
  var lastTransitionTime: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Time {
    get {return _storage._lastTransitionTime ?? K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Time()}
    set {_uniqueStorage()._lastTransitionTime = newValue}
  }
  /// Returns true if `lastTransitionTime` has been explicitly set.
  var hasLastTransitionTime: Bool {return _storage._lastTransitionTime != nil}
  /// Clears the value of `lastTransitionTime`. Subsequent reads from it will return its default value.
  mutating func clearLastTransitionTime() {_uniqueStorage()._lastTransitionTime = nil}

  /// reason is a unique, one-word, CamelCase reason for the condition's last transition.
  /// +optional
  var reason: String {
    get {return _storage._reason ?? String()}
    set {_uniqueStorage()._reason = newValue}
  }
  /// Returns true if `reason` has been explicitly set.
  var hasReason: Bool {return _storage._reason != nil}
  /// Clears the value of `reason`. Subsequent reads from it will return its default value.
  mutating func clearReason() {_uniqueStorage()._reason = nil}

  /// message is a human-readable message indicating details about last transition.
  /// +optional
  var message: String {
    get {return _storage._message ?? String()}
    set {_uniqueStorage()._message = newValue}
  }
  /// Returns true if `message` has been explicitly set.
  var hasMessage: Bool {return _storage._message != nil}
  /// Clears the value of `message`. Subsequent reads from it will return its default value.
  mutating func clearMessage() {_uniqueStorage()._message = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionList {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var metadata: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ListMeta {
    get {return _storage._metadata ?? K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ListMeta()}
    set {_uniqueStorage()._metadata = newValue}
  }
  /// Returns true if `metadata` has been explicitly set.
  var hasMetadata: Bool {return _storage._metadata != nil}
  /// Clears the value of `metadata`. Subsequent reads from it will return its default value.
  mutating func clearMetadata() {_uniqueStorage()._metadata = nil}

  /// items list individual CustomResourceDefinition objects
  var items: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition] {
    get {return _storage._items}
    set {_uniqueStorage()._items = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// plural is the plural name of the resource to serve.
  /// The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
  /// Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  /// Must be all lowercase.
  var plural: String {
    get {return _plural ?? String()}
    set {_plural = newValue}
  }
  /// Returns true if `plural` has been explicitly set.
  var hasPlural: Bool {return self._plural != nil}
  /// Clears the value of `plural`. Subsequent reads from it will return its default value.
  mutating func clearPlural() {self._plural = nil}

  /// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  /// +optional
  var singular: String {
    get {return _singular ?? String()}
    set {_singular = newValue}
  }
  /// Returns true if `singular` has been explicitly set.
  var hasSingular: Bool {return self._singular != nil}
  /// Clears the value of `singular`. Subsequent reads from it will return its default value.
  mutating func clearSingular() {self._singular = nil}

  /// shortNames are short names for the resource, exposed in API discovery documents,
  /// and used by clients to support invocations like `kubectl get <shortname>`.
  /// It must be all lowercase.
  /// +optional
  var shortNames: [String] = []

  /// kind is the serialized kind of the resource. It is normally CamelCase and singular.
  /// Custom resource instances will use this value as the `kind` attribute in API calls.
  var kind: String {
    get {return _kind ?? String()}
    set {_kind = newValue}
  }
  /// Returns true if `kind` has been explicitly set.
  var hasKind: Bool {return self._kind != nil}
  /// Clears the value of `kind`. Subsequent reads from it will return its default value.
  mutating func clearKind() {self._kind = nil}

  /// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  /// +optional
  var listKind: String {
    get {return _listKind ?? String()}
    set {_listKind = newValue}
  }
  /// Returns true if `listKind` has been explicitly set.
  var hasListKind: Bool {return self._listKind != nil}
  /// Clears the value of `listKind`. Subsequent reads from it will return its default value.
  mutating func clearListKind() {self._listKind = nil}

  /// categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
  /// This is published in API discovery documents, and used by clients to support invocations like
  /// `kubectl get all`.
  /// +optional
  var categories: [String] = []

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _plural: String? = nil
  fileprivate var _singular: String? = nil
  fileprivate var _kind: String? = nil
  fileprivate var _listKind: String? = nil
}

/// CustomResourceDefinitionSpec describes how a user wants their resource to appear
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// group is the API group of the defined custom resource.
  /// The custom resources are served under `/apis/<group>/...`.
  /// Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  var group: String {
    get {return _storage._group ?? String()}
    set {_uniqueStorage()._group = newValue}
  }
  /// Returns true if `group` has been explicitly set.
  var hasGroup: Bool {return _storage._group != nil}
  /// Clears the value of `group`. Subsequent reads from it will return its default value.
  mutating func clearGroup() {_uniqueStorage()._group = nil}

  /// version is the API version of the defined custom resource.
  /// The custom resources are served under `/apis/<group>/<version>/...`.
  /// Must match the name of the first item in the `versions` list if `version` and `versions` are both specified.
  /// Optional if `versions` is specified.
  /// Deprecated: use `versions` instead.
  /// +optional
  var version: String {
    get {return _storage._version ?? String()}
    set {_uniqueStorage()._version = newValue}
  }
  /// Returns true if `version` has been explicitly set.
  var hasVersion: Bool {return _storage._version != nil}
  /// Clears the value of `version`. Subsequent reads from it will return its default value.
  mutating func clearVersion() {_uniqueStorage()._version = nil}

  /// names specify the resource and kind names for the custom resource.
  var names: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames {
    get {return _storage._names ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames()}
    set {_uniqueStorage()._names = newValue}
  }
  /// Returns true if `names` has been explicitly set.
  var hasNames: Bool {return _storage._names != nil}
  /// Clears the value of `names`. Subsequent reads from it will return its default value.
  mutating func clearNames() {_uniqueStorage()._names = nil}

  /// scope indicates whether the defined custom resource is cluster- or namespace-scoped.
  /// Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
  var scope: String {
    get {return _storage._scope ?? String()}
    set {_uniqueStorage()._scope = newValue}
  }
  /// Returns true if `scope` has been explicitly set.
  var hasScope: Bool {return _storage._scope != nil}
  /// Clears the value of `scope`. Subsequent reads from it will return its default value.
  mutating func clearScope() {_uniqueStorage()._scope = nil}

  /// validation describes the schema used for validation and pruning of the custom resource.
  /// If present, this validation schema is used to validate all versions.
  /// Top-level and per-version schemas are mutually exclusive.
  /// +optional
  var validation: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation {
    get {return _storage._validation ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation()}
    set {_uniqueStorage()._validation = newValue}
  }
  /// Returns true if `validation` has been explicitly set.
  var hasValidation: Bool {return _storage._validation != nil}
  /// Clears the value of `validation`. Subsequent reads from it will return its default value.
  mutating func clearValidation() {_uniqueStorage()._validation = nil}

  /// subresources specify what subresources the defined custom resource has.
  /// If present, this field configures subresources for all versions.
  /// Top-level and per-version subresources are mutually exclusive.
  /// +optional
  var subresources: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources {
    get {return _storage._subresources ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources()}
    set {_uniqueStorage()._subresources = newValue}
  }
  /// Returns true if `subresources` has been explicitly set.
  var hasSubresources: Bool {return _storage._subresources != nil}
  /// Clears the value of `subresources`. Subsequent reads from it will return its default value.
  mutating func clearSubresources() {_uniqueStorage()._subresources = nil}

  /// versions is the list of all API versions of the defined custom resource.
  /// Optional if `version` is specified.
  /// The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified.
  /// Version names are used to compute the order in which served versions are listed in API discovery.
  /// If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered
  /// lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version),
  /// then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first
  /// by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing
  /// major version, then minor version. An example sorted list of versions:
  /// v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  /// +optional
  var versions: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion] {
    get {return _storage._versions}
    set {_uniqueStorage()._versions = newValue}
  }

  /// additionalPrinterColumns specifies additional columns returned in Table output.
  /// See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
  /// If present, this field configures columns for all versions.
  /// Top-level and per-version columns are mutually exclusive.
  /// If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  /// +optional
  var additionalPrinterColumns: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition] {
    get {return _storage._additionalPrinterColumns}
    set {_uniqueStorage()._additionalPrinterColumns = newValue}
  }

  /// conversion defines conversion settings for the CRD.
  /// +optional
  var conversion: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion {
    get {return _storage._conversion ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion()}
    set {_uniqueStorage()._conversion = newValue}
  }
  /// Returns true if `conversion` has been explicitly set.
  var hasConversion: Bool {return _storage._conversion != nil}
  /// Clears the value of `conversion`. Subsequent reads from it will return its default value.
  mutating func clearConversion() {_uniqueStorage()._conversion = nil}

  /// preserveUnknownFields indicates that object fields which are not specified
  /// in the OpenAPI schema should be preserved when persisting to storage.
  /// apiVersion, kind, metadata and known fields inside metadata are always preserved.
  /// If false, schemas must be defined for all versions.
  /// Defaults to true in v1beta for backwards compatibility.
  /// Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified
  /// in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension.
  /// See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
  /// +optional
  var preserveUnknownFields: Bool {
    get {return _storage._preserveUnknownFields ?? false}
    set {_uniqueStorage()._preserveUnknownFields = newValue}
  }
  /// Returns true if `preserveUnknownFields` has been explicitly set.
  var hasPreserveUnknownFields: Bool {return _storage._preserveUnknownFields != nil}
  /// Clears the value of `preserveUnknownFields`. Subsequent reads from it will return its default value.
  mutating func clearPreserveUnknownFields() {_uniqueStorage()._preserveUnknownFields = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// conditions indicate state for particular aspects of a CustomResourceDefinition
  /// +optional
  var conditions: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition] {
    get {return _storage._conditions}
    set {_uniqueStorage()._conditions = newValue}
  }

  /// acceptedNames are the names that are actually being used to serve discovery.
  /// They may be different than the names in spec.
  var acceptedNames: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames {
    get {return _storage._acceptedNames ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames()}
    set {_uniqueStorage()._acceptedNames = newValue}
  }
  /// Returns true if `acceptedNames` has been explicitly set.
  var hasAcceptedNames: Bool {return _storage._acceptedNames != nil}
  /// Clears the value of `acceptedNames`. Subsequent reads from it will return its default value.
  mutating func clearAcceptedNames() {_uniqueStorage()._acceptedNames = nil}

  /// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these
  /// versions allows a migration path for stored versions in etcd. The field is mutable
  /// so a migration controller can finish a migration to another version (ensuring
  /// no old objects are left in storage), and then remove the rest of the
  /// versions from this list.
  /// Versions may not be removed from `spec.versions` while they exist in this list.
  var storedVersions: [String] {
    get {return _storage._storedVersions}
    set {_uniqueStorage()._storedVersions = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceDefinitionVersion describes a version for CRD.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// name is the version name, e.g. “v1”, “v2beta1”, etc.
  /// The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  mutating func clearName() {_uniqueStorage()._name = nil}

  /// served is a flag enabling/disabling this version from being served via REST APIs
  var served: Bool {
    get {return _storage._served ?? false}
    set {_uniqueStorage()._served = newValue}
  }
  /// Returns true if `served` has been explicitly set.
  var hasServed: Bool {return _storage._served != nil}
  /// Clears the value of `served`. Subsequent reads from it will return its default value.
  mutating func clearServed() {_uniqueStorage()._served = nil}

  /// storage indicates this version should be used when persisting custom resources to storage.
  /// There must be exactly one version with storage=true.
  var storage: Bool {
    get {return _storage._storage ?? false}
    set {_uniqueStorage()._storage = newValue}
  }
  /// Returns true if `storage` has been explicitly set.
  var hasStorage: Bool {return _storage._storage != nil}
  /// Clears the value of `storage`. Subsequent reads from it will return its default value.
  mutating func clearStorage() {_uniqueStorage()._storage = nil}

  /// schema describes the schema used for validation and pruning of this version of the custom resource.
  /// Top-level and per-version schemas are mutually exclusive.
  /// Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
  /// +optional
  var schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation {
    get {return _storage._schema ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation()}
    set {_uniqueStorage()._schema = newValue}
  }
  /// Returns true if `schema` has been explicitly set.
  var hasSchema: Bool {return _storage._schema != nil}
  /// Clears the value of `schema`. Subsequent reads from it will return its default value.
  mutating func clearSchema() {_uniqueStorage()._schema = nil}

  /// subresources specify what subresources this version of the defined custom resource have.
  /// Top-level and per-version subresources are mutually exclusive.
  /// Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
  /// +optional
  var subresources: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources {
    get {return _storage._subresources ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources()}
    set {_uniqueStorage()._subresources = newValue}
  }
  /// Returns true if `subresources` has been explicitly set.
  var hasSubresources: Bool {return _storage._subresources != nil}
  /// Clears the value of `subresources`. Subsequent reads from it will return its default value.
  mutating func clearSubresources() {_uniqueStorage()._subresources = nil}

  /// additionalPrinterColumns specifies additional columns returned in Table output.
  /// See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
  /// Top-level and per-version columns are mutually exclusive.
  /// Per-version columns must not all be set to identical values (top-level columns should be used instead).
  /// If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  /// +optional
  var additionalPrinterColumns: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition] {
    get {return _storage._additionalPrinterColumns}
    set {_uniqueStorage()._additionalPrinterColumns = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`.
  /// Only JSON paths without the array notation are allowed.
  /// Must be a JSON Path under `.spec`.
  /// If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  var specReplicasPath: String {
    get {return _specReplicasPath ?? String()}
    set {_specReplicasPath = newValue}
  }
  /// Returns true if `specReplicasPath` has been explicitly set.
  var hasSpecReplicasPath: Bool {return self._specReplicasPath != nil}
  /// Clears the value of `specReplicasPath`. Subsequent reads from it will return its default value.
  mutating func clearSpecReplicasPath() {self._specReplicasPath = nil}

  /// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`.
  /// Only JSON paths without the array notation are allowed.
  /// Must be a JSON Path under `.status`.
  /// If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource
  /// will default to 0.
  var statusReplicasPath: String {
    get {return _statusReplicasPath ?? String()}
    set {_statusReplicasPath = newValue}
  }
  /// Returns true if `statusReplicasPath` has been explicitly set.
  var hasStatusReplicasPath: Bool {return self._statusReplicasPath != nil}
  /// Clears the value of `statusReplicasPath`. Subsequent reads from it will return its default value.
  mutating func clearStatusReplicasPath() {self._statusReplicasPath = nil}

  /// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`.
  /// Only JSON paths without the array notation are allowed.
  /// Must be a JSON Path under `.status` or `.spec`.
  /// Must be set to work with HorizontalPodAutoscaler.
  /// The field pointed by this JSON path must be a string field (not a complex selector struct)
  /// which contains a serialized label selector in string form.
  /// More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
  /// If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale`
  /// subresource will default to the empty string.
  /// +optional
  var labelSelectorPath: String {
    get {return _labelSelectorPath ?? String()}
    set {_labelSelectorPath = newValue}
  }
  /// Returns true if `labelSelectorPath` has been explicitly set.
  var hasLabelSelectorPath: Bool {return self._labelSelectorPath != nil}
  /// Clears the value of `labelSelectorPath`. Subsequent reads from it will return its default value.
  mutating func clearLabelSelectorPath() {self._labelSelectorPath = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _specReplicasPath: String? = nil
  fileprivate var _statusReplicasPath: String? = nil
  fileprivate var _labelSelectorPath: String? = nil
}

/// CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources.
/// Status is represented by the `.status` JSON path inside of a CustomResource. When set,
/// * exposes a /status subresource for the custom resource
/// * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza
/// * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

/// CustomResourceSubresources defines the status and scale subresources for CustomResources.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// status indicates the custom resource should serve a `/status` subresource.
  /// When enabled:
  /// 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object.
  /// 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
  /// +optional
  var status: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus {
    get {return _storage._status ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus()}
    set {_uniqueStorage()._status = newValue}
  }
  /// Returns true if `status` has been explicitly set.
  var hasStatus: Bool {return _storage._status != nil}
  /// Clears the value of `status`. Subsequent reads from it will return its default value.
  mutating func clearStatus() {_uniqueStorage()._status = nil}

  /// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
  /// +optional
  var scale: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale {
    get {return _storage._scale ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale()}
    set {_uniqueStorage()._scale = newValue}
  }
  /// Returns true if `scale` has been explicitly set.
  var hasScale: Bool {return _storage._scale != nil}
  /// Clears the value of `scale`. Subsequent reads from it will return its default value.
  mutating func clearScale() {_uniqueStorage()._scale = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// CustomResourceValidation is a list of validation methods for CustomResources.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
  /// +optional
  var openApiv3Schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
    get {return _storage._openApiv3Schema ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps()}
    set {_uniqueStorage()._openApiv3Schema = newValue}
  }
  /// Returns true if `openApiv3Schema` has been explicitly set.
  var hasOpenApiv3Schema: Bool {return _storage._openApiv3Schema != nil}
  /// Clears the value of `openApiv3Schema`. Subsequent reads from it will return its default value.
  mutating func clearOpenApiv3Schema() {_uniqueStorage()._openApiv3Schema = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// ExternalDocumentation allows referencing an external resource for extended documentation.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var description_p: String {
    get {return _description_p ?? String()}
    set {_description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return self._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {self._description_p = nil}

  var url: String {
    get {return _url ?? String()}
    set {_url = newValue}
  }
  /// Returns true if `url` has been explicitly set.
  var hasURL: Bool {return self._url != nil}
  /// Clears the value of `url`. Subsequent reads from it will return its default value.
  mutating func clearURL() {self._url = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _description_p: String? = nil
  fileprivate var _url: String? = nil
}

/// JSON represents any valid JSON value.
/// These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var raw: Data {
    get {return _raw ?? SwiftProtobuf.Internal.emptyData}
    set {_raw = newValue}
  }
  /// Returns true if `raw` has been explicitly set.
  var hasRaw: Bool {return self._raw != nil}
  /// Clears the value of `raw`. Subsequent reads from it will return its default value.
  mutating func clearRaw() {self._raw = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _raw: Data? = nil
}

/// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var id: String {
    get {return _storage._id ?? String()}
    set {_uniqueStorage()._id = newValue}
  }
  /// Returns true if `id` has been explicitly set.
  var hasID: Bool {return _storage._id != nil}
  /// Clears the value of `id`. Subsequent reads from it will return its default value.
  mutating func clearID() {_uniqueStorage()._id = nil}

  var schema: String {
    get {return _storage._schema ?? String()}
    set {_uniqueStorage()._schema = newValue}
  }
  /// Returns true if `schema` has been explicitly set.
  var hasSchema: Bool {return _storage._schema != nil}
  /// Clears the value of `schema`. Subsequent reads from it will return its default value.
  mutating func clearSchema() {_uniqueStorage()._schema = nil}

  var ref: String {
    get {return _storage._ref ?? String()}
    set {_uniqueStorage()._ref = newValue}
  }
  /// Returns true if `ref` has been explicitly set.
  var hasRef: Bool {return _storage._ref != nil}
  /// Clears the value of `ref`. Subsequent reads from it will return its default value.
  mutating func clearRef() {_uniqueStorage()._ref = nil}

  var description_p: String {
    get {return _storage._description_p ?? String()}
    set {_uniqueStorage()._description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  var hasDescription_p: Bool {return _storage._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  mutating func clearDescription_p() {_uniqueStorage()._description_p = nil}

  var type: String {
    get {return _storage._type ?? String()}
    set {_uniqueStorage()._type = newValue}
  }
  /// Returns true if `type` has been explicitly set.
  var hasType: Bool {return _storage._type != nil}
  /// Clears the value of `type`. Subsequent reads from it will return its default value.
  mutating func clearType() {_uniqueStorage()._type = nil}

  var format: String {
    get {return _storage._format ?? String()}
    set {_uniqueStorage()._format = newValue}
  }
  /// Returns true if `format` has been explicitly set.
  var hasFormat: Bool {return _storage._format != nil}
  /// Clears the value of `format`. Subsequent reads from it will return its default value.
  mutating func clearFormat() {_uniqueStorage()._format = nil}

  var title: String {
    get {return _storage._title ?? String()}
    set {_uniqueStorage()._title = newValue}
  }
  /// Returns true if `title` has been explicitly set.
  var hasTitle: Bool {return _storage._title != nil}
  /// Clears the value of `title`. Subsequent reads from it will return its default value.
  mutating func clearTitle() {_uniqueStorage()._title = nil}

  /// default is a default value for undefined object fields.
  /// Defaulting is a beta feature under the CustomResourceDefaulting feature gate.
  /// CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
  var `default`: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON {
    get {return _storage._default ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON()}
    set {_uniqueStorage()._default = newValue}
  }
  /// Returns true if ``default`` has been explicitly set.
  var hasDefault: Bool {return _storage._default != nil}
  /// Clears the value of ``default``. Subsequent reads from it will return its default value.
  mutating func clearDefault() {_uniqueStorage()._default = nil}

  var maximum: Double {
    get {return _storage._maximum ?? 0}
    set {_uniqueStorage()._maximum = newValue}
  }
  /// Returns true if `maximum` has been explicitly set.
  var hasMaximum: Bool {return _storage._maximum != nil}
  /// Clears the value of `maximum`. Subsequent reads from it will return its default value.
  mutating func clearMaximum() {_uniqueStorage()._maximum = nil}

  var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum ?? false}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }
  /// Returns true if `exclusiveMaximum` has been explicitly set.
  var hasExclusiveMaximum: Bool {return _storage._exclusiveMaximum != nil}
  /// Clears the value of `exclusiveMaximum`. Subsequent reads from it will return its default value.
  mutating func clearExclusiveMaximum() {_uniqueStorage()._exclusiveMaximum = nil}

  var minimum: Double {
    get {return _storage._minimum ?? 0}
    set {_uniqueStorage()._minimum = newValue}
  }
  /// Returns true if `minimum` has been explicitly set.
  var hasMinimum: Bool {return _storage._minimum != nil}
  /// Clears the value of `minimum`. Subsequent reads from it will return its default value.
  mutating func clearMinimum() {_uniqueStorage()._minimum = nil}

  var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum ?? false}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }
  /// Returns true if `exclusiveMinimum` has been explicitly set.
  var hasExclusiveMinimum: Bool {return _storage._exclusiveMinimum != nil}
  /// Clears the value of `exclusiveMinimum`. Subsequent reads from it will return its default value.
  mutating func clearExclusiveMinimum() {_uniqueStorage()._exclusiveMinimum = nil}

  var maxLength: Int64 {
    get {return _storage._maxLength ?? 0}
    set {_uniqueStorage()._maxLength = newValue}
  }
  /// Returns true if `maxLength` has been explicitly set.
  var hasMaxLength: Bool {return _storage._maxLength != nil}
  /// Clears the value of `maxLength`. Subsequent reads from it will return its default value.
  mutating func clearMaxLength() {_uniqueStorage()._maxLength = nil}

  var minLength: Int64 {
    get {return _storage._minLength ?? 0}
    set {_uniqueStorage()._minLength = newValue}
  }
  /// Returns true if `minLength` has been explicitly set.
  var hasMinLength: Bool {return _storage._minLength != nil}
  /// Clears the value of `minLength`. Subsequent reads from it will return its default value.
  mutating func clearMinLength() {_uniqueStorage()._minLength = nil}

  var pattern: String {
    get {return _storage._pattern ?? String()}
    set {_uniqueStorage()._pattern = newValue}
  }
  /// Returns true if `pattern` has been explicitly set.
  var hasPattern: Bool {return _storage._pattern != nil}
  /// Clears the value of `pattern`. Subsequent reads from it will return its default value.
  mutating func clearPattern() {_uniqueStorage()._pattern = nil}

  var maxItems: Int64 {
    get {return _storage._maxItems ?? 0}
    set {_uniqueStorage()._maxItems = newValue}
  }
  /// Returns true if `maxItems` has been explicitly set.
  var hasMaxItems: Bool {return _storage._maxItems != nil}
  /// Clears the value of `maxItems`. Subsequent reads from it will return its default value.
  mutating func clearMaxItems() {_uniqueStorage()._maxItems = nil}

  var minItems: Int64 {
    get {return _storage._minItems ?? 0}
    set {_uniqueStorage()._minItems = newValue}
  }
  /// Returns true if `minItems` has been explicitly set.
  var hasMinItems: Bool {return _storage._minItems != nil}
  /// Clears the value of `minItems`. Subsequent reads from it will return its default value.
  mutating func clearMinItems() {_uniqueStorage()._minItems = nil}

  var uniqueItems: Bool {
    get {return _storage._uniqueItems ?? false}
    set {_uniqueStorage()._uniqueItems = newValue}
  }
  /// Returns true if `uniqueItems` has been explicitly set.
  var hasUniqueItems: Bool {return _storage._uniqueItems != nil}
  /// Clears the value of `uniqueItems`. Subsequent reads from it will return its default value.
  mutating func clearUniqueItems() {_uniqueStorage()._uniqueItems = nil}

  var multipleOf: Double {
    get {return _storage._multipleOf ?? 0}
    set {_uniqueStorage()._multipleOf = newValue}
  }
  /// Returns true if `multipleOf` has been explicitly set.
  var hasMultipleOf: Bool {return _storage._multipleOf != nil}
  /// Clears the value of `multipleOf`. Subsequent reads from it will return its default value.
  mutating func clearMultipleOf() {_uniqueStorage()._multipleOf = nil}

  var `enum`: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON] {
    get {return _storage._enum}
    set {_uniqueStorage()._enum = newValue}
  }

  var maxProperties: Int64 {
    get {return _storage._maxProperties ?? 0}
    set {_uniqueStorage()._maxProperties = newValue}
  }
  /// Returns true if `maxProperties` has been explicitly set.
  var hasMaxProperties: Bool {return _storage._maxProperties != nil}
  /// Clears the value of `maxProperties`. Subsequent reads from it will return its default value.
  mutating func clearMaxProperties() {_uniqueStorage()._maxProperties = nil}

  var minProperties: Int64 {
    get {return _storage._minProperties ?? 0}
    set {_uniqueStorage()._minProperties = newValue}
  }
  /// Returns true if `minProperties` has been explicitly set.
  var hasMinProperties: Bool {return _storage._minProperties != nil}
  /// Clears the value of `minProperties`. Subsequent reads from it will return its default value.
  mutating func clearMinProperties() {_uniqueStorage()._minProperties = nil}

  var required: [String] {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  var items: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray {
    get {return _storage._items ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray()}
    set {_uniqueStorage()._items = newValue}
  }
  /// Returns true if `items` has been explicitly set.
  var hasItems: Bool {return _storage._items != nil}
  /// Clears the value of `items`. Subsequent reads from it will return its default value.
  mutating func clearItems() {_uniqueStorage()._items = nil}

  var allOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] {
    get {return _storage._allOf}
    set {_uniqueStorage()._allOf = newValue}
  }

  var oneOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] {
    get {return _storage._oneOf}
    set {_uniqueStorage()._oneOf = newValue}
  }

  var anyOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] {
    get {return _storage._anyOf}
    set {_uniqueStorage()._anyOf = newValue}
  }

  var not: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
    get {return _storage._not ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps()}
    set {_uniqueStorage()._not = newValue}
  }
  /// Returns true if `not` has been explicitly set.
  var hasNot: Bool {return _storage._not != nil}
  /// Clears the value of `not`. Subsequent reads from it will return its default value.
  mutating func clearNot() {_uniqueStorage()._not = nil}

  var properties: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> {
    get {return _storage._properties}
    set {_uniqueStorage()._properties = newValue}
  }

  var additionalProperties: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool {
    get {return _storage._additionalProperties ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool()}
    set {_uniqueStorage()._additionalProperties = newValue}
  }
  /// Returns true if `additionalProperties` has been explicitly set.
  var hasAdditionalProperties: Bool {return _storage._additionalProperties != nil}
  /// Clears the value of `additionalProperties`. Subsequent reads from it will return its default value.
  mutating func clearAdditionalProperties() {_uniqueStorage()._additionalProperties = nil}

  var patternProperties: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> {
    get {return _storage._patternProperties}
    set {_uniqueStorage()._patternProperties = newValue}
  }

  var dependencies: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray> {
    get {return _storage._dependencies}
    set {_uniqueStorage()._dependencies = newValue}
  }

  var additionalItems: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool {
    get {return _storage._additionalItems ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool()}
    set {_uniqueStorage()._additionalItems = newValue}
  }
  /// Returns true if `additionalItems` has been explicitly set.
  var hasAdditionalItems: Bool {return _storage._additionalItems != nil}
  /// Clears the value of `additionalItems`. Subsequent reads from it will return its default value.
  mutating func clearAdditionalItems() {_uniqueStorage()._additionalItems = nil}

  var definitions: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> {
    get {return _storage._definitions}
    set {_uniqueStorage()._definitions = newValue}
  }

  var externalDocs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation {
    get {return _storage._externalDocs ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  /// Returns true if `externalDocs` has been explicitly set.
  var hasExternalDocs: Bool {return _storage._externalDocs != nil}
  /// Clears the value of `externalDocs`. Subsequent reads from it will return its default value.
  mutating func clearExternalDocs() {_uniqueStorage()._externalDocs = nil}

  var example: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON {
    get {return _storage._example ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON()}
    set {_uniqueStorage()._example = newValue}
  }
  /// Returns true if `example` has been explicitly set.
  var hasExample: Bool {return _storage._example != nil}
  /// Clears the value of `example`. Subsequent reads from it will return its default value.
  mutating func clearExample() {_uniqueStorage()._example = nil}

  var nullable: Bool {
    get {return _storage._nullable ?? false}
    set {_uniqueStorage()._nullable = newValue}
  }
  /// Returns true if `nullable` has been explicitly set.
  var hasNullable: Bool {return _storage._nullable != nil}
  /// Clears the value of `nullable`. Subsequent reads from it will return its default value.
  mutating func clearNullable() {_uniqueStorage()._nullable = nil}

  /// x-kubernetes-preserve-unknown-fields stops the API server
  /// decoding step from pruning fields which are not specified
  /// in the validation schema. This affects fields recursively,
  /// but switches back to normal pruning behaviour if nested
  /// properties or additionalProperties are specified in the schema.
  /// This can either be true or undefined. False is forbidden.
  var xKubernetesPreserveUnknownFields: Bool {
    get {return _storage._xKubernetesPreserveUnknownFields ?? false}
    set {_uniqueStorage()._xKubernetesPreserveUnknownFields = newValue}
  }
  /// Returns true if `xKubernetesPreserveUnknownFields` has been explicitly set.
  var hasXKubernetesPreserveUnknownFields: Bool {return _storage._xKubernetesPreserveUnknownFields != nil}
  /// Clears the value of `xKubernetesPreserveUnknownFields`. Subsequent reads from it will return its default value.
  mutating func clearXKubernetesPreserveUnknownFields() {_uniqueStorage()._xKubernetesPreserveUnknownFields = nil}

  /// x-kubernetes-embedded-resource defines that the value is an
  /// embedded Kubernetes runtime.Object, with TypeMeta and
  /// ObjectMeta. The type must be object. It is allowed to further
  /// restrict the embedded object. kind, apiVersion and metadata
  /// are validated automatically. x-kubernetes-preserve-unknown-fields
  /// is allowed to be true, but does not have to be if the object
  /// is fully specified (up to kind, apiVersion, metadata).
  var xKubernetesEmbeddedResource: Bool {
    get {return _storage._xKubernetesEmbeddedResource ?? false}
    set {_uniqueStorage()._xKubernetesEmbeddedResource = newValue}
  }
  /// Returns true if `xKubernetesEmbeddedResource` has been explicitly set.
  var hasXKubernetesEmbeddedResource: Bool {return _storage._xKubernetesEmbeddedResource != nil}
  /// Clears the value of `xKubernetesEmbeddedResource`. Subsequent reads from it will return its default value.
  mutating func clearXKubernetesEmbeddedResource() {_uniqueStorage()._xKubernetesEmbeddedResource = nil}

  /// x-kubernetes-int-or-string specifies that this value is
  /// either an integer or a string. If this is true, an empty
  /// type is allowed and type as child of anyOf is permitted
  /// if following one of the following patterns:
  ///
  /// 1) anyOf:
  ///    - type: integer
  ///    - type: string
  /// 2) allOf:
  ///    - anyOf:
  ///      - type: integer
  ///      - type: string
  ///    - ... zero or more
  var xKubernetesIntOrString: Bool {
    get {return _storage._xKubernetesIntOrString ?? false}
    set {_uniqueStorage()._xKubernetesIntOrString = newValue}
  }
  /// Returns true if `xKubernetesIntOrString` has been explicitly set.
  var hasXKubernetesIntOrString: Bool {return _storage._xKubernetesIntOrString != nil}
  /// Clears the value of `xKubernetesIntOrString`. Subsequent reads from it will return its default value.
  mutating func clearXKubernetesIntOrString() {_uniqueStorage()._xKubernetesIntOrString = nil}

  /// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used
  /// as the index of the map.
  ///
  /// This tag MUST only be used on lists that have the "x-kubernetes-list-type"
  /// extension set to "map". Also, the values specified for this attribute must
  /// be a scalar typed field of the child structure (no nesting is supported).
  ///
  /// +optional
  var xKubernetesListMapKeys: [String] {
    get {return _storage._xKubernetesListMapKeys}
    set {_uniqueStorage()._xKubernetesListMapKeys = newValue}
  }

  /// x-kubernetes-list-type annotates an array to further describe its topology.
  /// This extension must only be used on lists and may have 3 possible values:
  ///
  /// 1) `atomic`: the list is treated as a single entity, like a scalar.
  ///      Atomic lists will be entirely replaced when updated. This extension
  ///      may be used on any type of list (struct, scalar, ...).
  /// 2) `set`:
  ///      Sets are lists that must not have multiple items with the same value. Each
  ///      value must be a scalar (or another atomic type).
  /// 3) `map`:
  ///      These lists are like maps in that their elements have a non-index key
  ///      used to identify them. Order is preserved upon merge. The map tag
  ///      must only be used on a list with elements of type object.
  /// Defaults to atomic for arrays.
  /// +optional
  var xKubernetesListType: String {
    get {return _storage._xKubernetesListType ?? String()}
    set {_uniqueStorage()._xKubernetesListType = newValue}
  }
  /// Returns true if `xKubernetesListType` has been explicitly set.
  var hasXKubernetesListType: Bool {return _storage._xKubernetesListType != nil}
  /// Clears the value of `xKubernetesListType`. Subsequent reads from it will return its default value.
  mutating func clearXKubernetesListType() {_uniqueStorage()._xKubernetesListType = nil}

  /// x-kubernetes-map-type annotates an object to further describe its topology.
  /// This extension must only be used when type is object and may have 2 possible values:
  ///
  /// 1) `granular`:
  ///      These maps are actual maps (key-value pairs) and each fields are independent
  ///      from each other (they can each be manipulated by separate actors). This is
  ///      the default behaviour for all maps.
  /// 2) `atomic`: the list is treated as a single entity, like a scalar.
  ///      Atomic maps will be entirely replaced when updated.
  /// +optional
  var xKubernetesMapType: String {
    get {return _storage._xKubernetesMapType ?? String()}
    set {_uniqueStorage()._xKubernetesMapType = newValue}
  }
  /// Returns true if `xKubernetesMapType` has been explicitly set.
  var hasXKubernetesMapType: Bool {return _storage._xKubernetesMapType != nil}
  /// Clears the value of `xKubernetesMapType`. Subsequent reads from it will return its default value.
  mutating func clearXKubernetesMapType() {_uniqueStorage()._xKubernetesMapType = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps
/// or an array of JSONSchemaProps. Mainly here for serialization purposes.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
    get {return _storage._schema ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps()}
    set {_uniqueStorage()._schema = newValue}
  }
  /// Returns true if `schema` has been explicitly set.
  var hasSchema: Bool {return _storage._schema != nil}
  /// Clears the value of `schema`. Subsequent reads from it will return its default value.
  mutating func clearSchema() {_uniqueStorage()._schema = nil}

  var jSonschemas: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] {
    get {return _storage._jSonschemas}
    set {_uniqueStorage()._jSonschemas = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value.
/// Defaults to true for the boolean property.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var allows: Bool {
    get {return _storage._allows ?? false}
    set {_uniqueStorage()._allows = newValue}
  }
  /// Returns true if `allows` has been explicitly set.
  var hasAllows: Bool {return _storage._allows != nil}
  /// Clears the value of `allows`. Subsequent reads from it will return its default value.
  mutating func clearAllows() {_uniqueStorage()._allows = nil}

  var schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
    get {return _storage._schema ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps()}
    set {_uniqueStorage()._schema = newValue}
  }
  /// Returns true if `schema` has been explicitly set.
  var hasSchema: Bool {return _storage._schema != nil}
  /// Clears the value of `schema`. Subsequent reads from it will return its default value.
  mutating func clearSchema() {_uniqueStorage()._schema = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps {
    get {return _storage._schema ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps()}
    set {_uniqueStorage()._schema = newValue}
  }
  /// Returns true if `schema` has been explicitly set.
  var hasSchema: Bool {return _storage._schema != nil}
  /// Clears the value of `schema`. Subsequent reads from it will return its default value.
  mutating func clearSchema() {_uniqueStorage()._schema = nil}

  var property: [String] {
    get {return _storage._property}
    set {_uniqueStorage()._property = newValue}
  }

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// ServiceReference holds a reference to Service.legacy.k8s.io
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// namespace is the namespace of the service.
  /// Required
  var namespace: String {
    get {return _namespace ?? String()}
    set {_namespace = newValue}
  }
  /// Returns true if `namespace` has been explicitly set.
  var hasNamespace: Bool {return self._namespace != nil}
  /// Clears the value of `namespace`. Subsequent reads from it will return its default value.
  mutating func clearNamespace() {self._namespace = nil}

  /// name is the name of the service.
  /// Required
  var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  mutating func clearName() {self._name = nil}

  /// path is an optional URL path at which the webhook will be contacted.
  /// +optional
  var path: String {
    get {return _path ?? String()}
    set {_path = newValue}
  }
  /// Returns true if `path` has been explicitly set.
  var hasPath: Bool {return self._path != nil}
  /// Clears the value of `path`. Subsequent reads from it will return its default value.
  mutating func clearPath() {self._path = nil}

  /// port is an optional service port at which the webhook will be contacted.
  /// `port` should be a valid port number (1-65535, inclusive).
  /// Defaults to 443 for backward compatibility.
  /// +optional
  var port: Int32 {
    get {return _port ?? 0}
    set {_port = newValue}
  }
  /// Returns true if `port` has been explicitly set.
  var hasPort: Bool {return self._port != nil}
  /// Clears the value of `port`. Subsequent reads from it will return its default value.
  mutating func clearPort() {self._port = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _namespace: String? = nil
  fileprivate var _name: String? = nil
  fileprivate var _path: String? = nil
  fileprivate var _port: Int32? = nil
}

/// WebhookClientConfig contains the information to make a TLS connection with the webhook.
struct K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// url gives the location of the webhook, in standard URL form
  /// (`scheme://host:port/path`). Exactly one of `url` or `service`
  /// must be specified.
  ///
  /// The `host` should not refer to a service running in the cluster; use
  /// the `service` field instead. The host might be resolved via external
  /// DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
  /// in-cluster DNS as that would be a layering violation). `host` may
  /// also be an IP address.
  ///
  /// Please note that using `localhost` or `127.0.0.1` as a `host` is
  /// risky unless you take great care to run this webhook on all hosts
  /// which run an apiserver which might need to make calls to this
  /// webhook. Such installs are likely to be non-portable, i.e., not easy
  /// to turn up in a new cluster.
  ///
  /// The scheme must be "https"; the URL must begin with "https://".
  ///
  /// A path is optional, and if present may be any string permissible in
  /// a URL. You may use the path to pass an arbitrary string to the
  /// webhook, for example, a cluster identifier.
  ///
  /// Attempting to use a user or basic auth e.g. "user:password@" is not
  /// allowed. Fragments ("#...") and query parameters ("?...") are not
  /// allowed, either.
  ///
  /// +optional
  var url: String {
    get {return _storage._url ?? String()}
    set {_uniqueStorage()._url = newValue}
  }
  /// Returns true if `url` has been explicitly set.
  var hasURL: Bool {return _storage._url != nil}
  /// Clears the value of `url`. Subsequent reads from it will return its default value.
  mutating func clearURL() {_uniqueStorage()._url = nil}

  /// service is a reference to the service for this webhook. Either
  /// service or url must be specified.
  ///
  /// If the webhook is running within the cluster, then you should use `service`.
  ///
  /// +optional
  var service: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference {
    get {return _storage._service ?? K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference()}
    set {_uniqueStorage()._service = newValue}
  }
  /// Returns true if `service` has been explicitly set.
  var hasService: Bool {return _storage._service != nil}
  /// Clears the value of `service`. Subsequent reads from it will return its default value.
  mutating func clearService() {_uniqueStorage()._service = nil}

  /// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
  /// If unspecified, system trust roots on the apiserver are used.
  /// +optional
  var caBundle: Data {
    get {return _storage._caBundle ?? SwiftProtobuf.Internal.emptyData}
    set {_uniqueStorage()._caBundle = newValue}
  }
  /// Returns true if `caBundle` has been explicitly set.
  var hasCaBundle: Bool {return _storage._caBundle != nil}
  /// Clears the value of `caBundle`. Subsequent reads from it will return its default value.
  mutating func clearCaBundle() {_uniqueStorage()._caBundle = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1beta1"

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ConversionRequest"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "uid"),
    2: .same(proto: "desiredAPIVersion"),
    3: .same(proto: "objects"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._uid)
      case 2: try decoder.decodeSingularStringField(value: &self._desiredApiversion)
      case 3: try decoder.decodeRepeatedMessageField(value: &self.objects)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._uid {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._desiredApiversion {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if !self.objects.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.objects, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest) -> Bool {
    if lhs._uid != rhs._uid {return false}
    if lhs._desiredApiversion != rhs._desiredApiversion {return false}
    if lhs.objects != rhs.objects {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ConversionResponse"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "uid"),
    2: .same(proto: "convertedObjects"),
    3: .same(proto: "result"),
  ]

  fileprivate class _StorageClass {
    var _uid: String? = nil
    var _convertedObjects: [K8s_Io_Apimachinery_Pkg_Runtime_RawExtension] = []
    var _result: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Status? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _uid = source._uid
      _convertedObjects = source._convertedObjects
      _result = source._result
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._uid)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._convertedObjects)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._result)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._uid {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if !_storage._convertedObjects.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._convertedObjects, fieldNumber: 2)
      }
      if let v = _storage._result {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._uid != rhs_storage._uid {return false}
        if _storage._convertedObjects != rhs_storage._convertedObjects {return false}
        if _storage._result != rhs_storage._result {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionReview: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ConversionReview"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "request"),
    2: .same(proto: "response"),
  ]

  fileprivate class _StorageClass {
    var _request: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionRequest? = nil
    var _response: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionResponse? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _request = source._request
      _response = source._response
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._request)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._response)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._request {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._response {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionReview, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ConversionReview) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._request != rhs_storage._request {return false}
        if _storage._response != rhs_storage._response {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceColumnDefinition"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "type"),
    3: .same(proto: "format"),
    4: .same(proto: "description"),
    5: .same(proto: "priority"),
    6: .same(proto: "JSONPath"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._name)
      case 2: try decoder.decodeSingularStringField(value: &self._type)
      case 3: try decoder.decodeSingularStringField(value: &self._format)
      case 4: try decoder.decodeSingularStringField(value: &self._description_p)
      case 5: try decoder.decodeSingularInt32Field(value: &self._priority)
      case 6: try decoder.decodeSingularStringField(value: &self._jsonpath)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._type {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._format {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    if let v = self._description_p {
      try visitor.visitSingularStringField(value: v, fieldNumber: 4)
    }
    if let v = self._priority {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 5)
    }
    if let v = self._jsonpath {
      try visitor.visitSingularStringField(value: v, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition) -> Bool {
    if lhs._name != rhs._name {return false}
    if lhs._type != rhs._type {return false}
    if lhs._format != rhs._format {return false}
    if lhs._description_p != rhs._description_p {return false}
    if lhs._priority != rhs._priority {return false}
    if lhs._jsonpath != rhs._jsonpath {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceConversion"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "strategy"),
    2: .same(proto: "webhookClientConfig"),
    3: .same(proto: "conversionReviewVersions"),
  ]

  fileprivate class _StorageClass {
    var _strategy: String? = nil
    var _webhookClientConfig: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig? = nil
    var _conversionReviewVersions: [String] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _strategy = source._strategy
      _webhookClientConfig = source._webhookClientConfig
      _conversionReviewVersions = source._conversionReviewVersions
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._strategy)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._webhookClientConfig)
        case 3: try decoder.decodeRepeatedStringField(value: &_storage._conversionReviewVersions)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._strategy {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._webhookClientConfig {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._conversionReviewVersions.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._conversionReviewVersions, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._strategy != rhs_storage._strategy {return false}
        if _storage._webhookClientConfig != rhs_storage._webhookClientConfig {return false}
        if _storage._conversionReviewVersions != rhs_storage._conversionReviewVersions {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinition"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "metadata"),
    2: .same(proto: "spec"),
    3: .same(proto: "status"),
  ]

  fileprivate class _StorageClass {
    var _metadata: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ObjectMeta? = nil
    var _spec: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec? = nil
    var _status: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _metadata = source._metadata
      _spec = source._spec
      _status = source._status
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._metadata)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._spec)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._status)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._metadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._spec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._status {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._metadata != rhs_storage._metadata {return false}
        if _storage._spec != rhs_storage._spec {return false}
        if _storage._status != rhs_storage._status {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionCondition"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .same(proto: "status"),
    3: .same(proto: "lastTransitionTime"),
    4: .same(proto: "reason"),
    5: .same(proto: "message"),
  ]

  fileprivate class _StorageClass {
    var _type: String? = nil
    var _status: String? = nil
    var _lastTransitionTime: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_Time? = nil
    var _reason: String? = nil
    var _message: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _type = source._type
      _status = source._status
      _lastTransitionTime = source._lastTransitionTime
      _reason = source._reason
      _message = source._message
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._type)
        case 2: try decoder.decodeSingularStringField(value: &_storage._status)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._lastTransitionTime)
        case 4: try decoder.decodeSingularStringField(value: &_storage._reason)
        case 5: try decoder.decodeSingularStringField(value: &_storage._message)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._type {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._status {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._lastTransitionTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._reason {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._message {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._type != rhs_storage._type {return false}
        if _storage._status != rhs_storage._status {return false}
        if _storage._lastTransitionTime != rhs_storage._lastTransitionTime {return false}
        if _storage._reason != rhs_storage._reason {return false}
        if _storage._message != rhs_storage._message {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionList: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionList"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "metadata"),
    2: .same(proto: "items"),
  ]

  fileprivate class _StorageClass {
    var _metadata: K8s_Io_Apimachinery_Pkg_Apis_Meta_V1_ListMeta? = nil
    var _items: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinition] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _metadata = source._metadata
      _items = source._items
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._metadata)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._items)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._metadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._items.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._items, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionList, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionList) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._metadata != rhs_storage._metadata {return false}
        if _storage._items != rhs_storage._items {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionNames"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "plural"),
    2: .same(proto: "singular"),
    3: .same(proto: "shortNames"),
    4: .same(proto: "kind"),
    5: .same(proto: "listKind"),
    6: .same(proto: "categories"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._plural)
      case 2: try decoder.decodeSingularStringField(value: &self._singular)
      case 3: try decoder.decodeRepeatedStringField(value: &self.shortNames)
      case 4: try decoder.decodeSingularStringField(value: &self._kind)
      case 5: try decoder.decodeSingularStringField(value: &self._listKind)
      case 6: try decoder.decodeRepeatedStringField(value: &self.categories)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._plural {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._singular {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if !self.shortNames.isEmpty {
      try visitor.visitRepeatedStringField(value: self.shortNames, fieldNumber: 3)
    }
    if let v = self._kind {
      try visitor.visitSingularStringField(value: v, fieldNumber: 4)
    }
    if let v = self._listKind {
      try visitor.visitSingularStringField(value: v, fieldNumber: 5)
    }
    if !self.categories.isEmpty {
      try visitor.visitRepeatedStringField(value: self.categories, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames) -> Bool {
    if lhs._plural != rhs._plural {return false}
    if lhs._singular != rhs._singular {return false}
    if lhs.shortNames != rhs.shortNames {return false}
    if lhs._kind != rhs._kind {return false}
    if lhs._listKind != rhs._listKind {return false}
    if lhs.categories != rhs.categories {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionSpec"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "group"),
    2: .same(proto: "version"),
    3: .same(proto: "names"),
    4: .same(proto: "scope"),
    5: .same(proto: "validation"),
    6: .same(proto: "subresources"),
    7: .same(proto: "versions"),
    8: .same(proto: "additionalPrinterColumns"),
    9: .same(proto: "conversion"),
    10: .same(proto: "preserveUnknownFields"),
  ]

  fileprivate class _StorageClass {
    var _group: String? = nil
    var _version: String? = nil
    var _names: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames? = nil
    var _scope: String? = nil
    var _validation: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation? = nil
    var _subresources: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources? = nil
    var _versions: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion] = []
    var _additionalPrinterColumns: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition] = []
    var _conversion: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceConversion? = nil
    var _preserveUnknownFields: Bool? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _group = source._group
      _version = source._version
      _names = source._names
      _scope = source._scope
      _validation = source._validation
      _subresources = source._subresources
      _versions = source._versions
      _additionalPrinterColumns = source._additionalPrinterColumns
      _conversion = source._conversion
      _preserveUnknownFields = source._preserveUnknownFields
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._group)
        case 2: try decoder.decodeSingularStringField(value: &_storage._version)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._names)
        case 4: try decoder.decodeSingularStringField(value: &_storage._scope)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._validation)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._subresources)
        case 7: try decoder.decodeRepeatedMessageField(value: &_storage._versions)
        case 8: try decoder.decodeRepeatedMessageField(value: &_storage._additionalPrinterColumns)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._conversion)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._preserveUnknownFields)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._group {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._version {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._names {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._scope {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._validation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._subresources {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if !_storage._versions.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._versions, fieldNumber: 7)
      }
      if !_storage._additionalPrinterColumns.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._additionalPrinterColumns, fieldNumber: 8)
      }
      if let v = _storage._conversion {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if let v = _storage._preserveUnknownFields {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionSpec) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._group != rhs_storage._group {return false}
        if _storage._version != rhs_storage._version {return false}
        if _storage._names != rhs_storage._names {return false}
        if _storage._scope != rhs_storage._scope {return false}
        if _storage._validation != rhs_storage._validation {return false}
        if _storage._subresources != rhs_storage._subresources {return false}
        if _storage._versions != rhs_storage._versions {return false}
        if _storage._additionalPrinterColumns != rhs_storage._additionalPrinterColumns {return false}
        if _storage._conversion != rhs_storage._conversion {return false}
        if _storage._preserveUnknownFields != rhs_storage._preserveUnknownFields {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionStatus"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "conditions"),
    2: .same(proto: "acceptedNames"),
    3: .same(proto: "storedVersions"),
  ]

  fileprivate class _StorageClass {
    var _conditions: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionCondition] = []
    var _acceptedNames: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionNames? = nil
    var _storedVersions: [String] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _conditions = source._conditions
      _acceptedNames = source._acceptedNames
      _storedVersions = source._storedVersions
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedMessageField(value: &_storage._conditions)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._acceptedNames)
        case 3: try decoder.decodeRepeatedStringField(value: &_storage._storedVersions)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._conditions.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._conditions, fieldNumber: 1)
      }
      if let v = _storage._acceptedNames {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._storedVersions.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._storedVersions, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionStatus) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._conditions != rhs_storage._conditions {return false}
        if _storage._acceptedNames != rhs_storage._acceptedNames {return false}
        if _storage._storedVersions != rhs_storage._storedVersions {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceDefinitionVersion"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "served"),
    3: .same(proto: "storage"),
    4: .same(proto: "schema"),
    5: .same(proto: "subresources"),
    6: .same(proto: "additionalPrinterColumns"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _served: Bool? = nil
    var _storage: Bool? = nil
    var _schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation? = nil
    var _subresources: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources? = nil
    var _additionalPrinterColumns: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceColumnDefinition] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _served = source._served
      _storage = source._storage
      _schema = source._schema
      _subresources = source._subresources
      _additionalPrinterColumns = source._additionalPrinterColumns
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._name)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._served)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._storage)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._schema)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._subresources)
        case 6: try decoder.decodeRepeatedMessageField(value: &_storage._additionalPrinterColumns)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._served {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 2)
      }
      if let v = _storage._storage {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 3)
      }
      if let v = _storage._schema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._subresources {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if !_storage._additionalPrinterColumns.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._additionalPrinterColumns, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceDefinitionVersion) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._served != rhs_storage._served {return false}
        if _storage._storage != rhs_storage._storage {return false}
        if _storage._schema != rhs_storage._schema {return false}
        if _storage._subresources != rhs_storage._subresources {return false}
        if _storage._additionalPrinterColumns != rhs_storage._additionalPrinterColumns {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceSubresourceScale"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "specReplicasPath"),
    2: .same(proto: "statusReplicasPath"),
    3: .same(proto: "labelSelectorPath"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._specReplicasPath)
      case 2: try decoder.decodeSingularStringField(value: &self._statusReplicasPath)
      case 3: try decoder.decodeSingularStringField(value: &self._labelSelectorPath)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._specReplicasPath {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._statusReplicasPath {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._labelSelectorPath {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale) -> Bool {
    if lhs._specReplicasPath != rhs._specReplicasPath {return false}
    if lhs._statusReplicasPath != rhs._statusReplicasPath {return false}
    if lhs._labelSelectorPath != rhs._labelSelectorPath {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceSubresourceStatus"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceSubresources"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "status"),
    2: .same(proto: "scale"),
  ]

  fileprivate class _StorageClass {
    var _status: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceStatus? = nil
    var _scale: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresourceScale? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _status = source._status
      _scale = source._scale
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._status)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._scale)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._status {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._scale {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceSubresources) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._status != rhs_storage._status {return false}
        if _storage._scale != rhs_storage._scale {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CustomResourceValidation"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "openAPIV3Schema"),
  ]

  fileprivate class _StorageClass {
    var _openApiv3Schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _openApiv3Schema = source._openApiv3Schema
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._openApiv3Schema)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._openApiv3Schema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_CustomResourceValidation) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._openApiv3Schema != rhs_storage._openApiv3Schema {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ExternalDocumentation"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "description"),
    2: .same(proto: "url"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._description_p)
      case 2: try decoder.decodeSingularStringField(value: &self._url)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._description_p {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._url {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation) -> Bool {
    if lhs._description_p != rhs._description_p {return false}
    if lhs._url != rhs._url {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".JSON"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "raw"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBytesField(value: &self._raw)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._raw {
      try visitor.visitSingularBytesField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON) -> Bool {
    if lhs._raw != rhs._raw {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".JSONSchemaProps"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .same(proto: "schema"),
    3: .same(proto: "ref"),
    4: .same(proto: "description"),
    5: .same(proto: "type"),
    6: .same(proto: "format"),
    7: .same(proto: "title"),
    8: .same(proto: "default"),
    9: .same(proto: "maximum"),
    10: .same(proto: "exclusiveMaximum"),
    11: .same(proto: "minimum"),
    12: .same(proto: "exclusiveMinimum"),
    13: .same(proto: "maxLength"),
    14: .same(proto: "minLength"),
    15: .same(proto: "pattern"),
    16: .same(proto: "maxItems"),
    17: .same(proto: "minItems"),
    18: .same(proto: "uniqueItems"),
    19: .same(proto: "multipleOf"),
    20: .same(proto: "enum"),
    21: .same(proto: "maxProperties"),
    22: .same(proto: "minProperties"),
    23: .same(proto: "required"),
    24: .same(proto: "items"),
    25: .same(proto: "allOf"),
    26: .same(proto: "oneOf"),
    27: .same(proto: "anyOf"),
    28: .same(proto: "not"),
    29: .same(proto: "properties"),
    30: .same(proto: "additionalProperties"),
    31: .same(proto: "patternProperties"),
    32: .same(proto: "dependencies"),
    33: .same(proto: "additionalItems"),
    34: .same(proto: "definitions"),
    35: .same(proto: "externalDocs"),
    36: .same(proto: "example"),
    37: .same(proto: "nullable"),
    38: .same(proto: "xKubernetesPreserveUnknownFields"),
    39: .same(proto: "xKubernetesEmbeddedResource"),
    40: .same(proto: "xKubernetesIntOrString"),
    41: .same(proto: "xKubernetesListMapKeys"),
    42: .same(proto: "xKubernetesListType"),
    43: .same(proto: "xKubernetesMapType"),
  ]

  fileprivate class _StorageClass {
    var _id: String? = nil
    var _schema: String? = nil
    var _ref: String? = nil
    var _description_p: String? = nil
    var _type: String? = nil
    var _format: String? = nil
    var _title: String? = nil
    var _default: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON? = nil
    var _maximum: Double? = nil
    var _exclusiveMaximum: Bool? = nil
    var _minimum: Double? = nil
    var _exclusiveMinimum: Bool? = nil
    var _maxLength: Int64? = nil
    var _minLength: Int64? = nil
    var _pattern: String? = nil
    var _maxItems: Int64? = nil
    var _minItems: Int64? = nil
    var _uniqueItems: Bool? = nil
    var _multipleOf: Double? = nil
    var _enum: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON] = []
    var _maxProperties: Int64? = nil
    var _minProperties: Int64? = nil
    var _required: [String] = []
    var _items: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray? = nil
    var _allOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] = []
    var _oneOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] = []
    var _anyOf: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] = []
    var _not: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps? = nil
    var _properties: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> = [:]
    var _additionalProperties: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool? = nil
    var _patternProperties: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> = [:]
    var _dependencies: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray> = [:]
    var _additionalItems: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool? = nil
    var _definitions: Dictionary<String,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps> = [:]
    var _externalDocs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ExternalDocumentation? = nil
    var _example: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSON? = nil
    var _nullable: Bool? = nil
    var _xKubernetesPreserveUnknownFields: Bool? = nil
    var _xKubernetesEmbeddedResource: Bool? = nil
    var _xKubernetesIntOrString: Bool? = nil
    var _xKubernetesListMapKeys: [String] = []
    var _xKubernetesListType: String? = nil
    var _xKubernetesMapType: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _id = source._id
      _schema = source._schema
      _ref = source._ref
      _description_p = source._description_p
      _type = source._type
      _format = source._format
      _title = source._title
      _default = source._default
      _maximum = source._maximum
      _exclusiveMaximum = source._exclusiveMaximum
      _minimum = source._minimum
      _exclusiveMinimum = source._exclusiveMinimum
      _maxLength = source._maxLength
      _minLength = source._minLength
      _pattern = source._pattern
      _maxItems = source._maxItems
      _minItems = source._minItems
      _uniqueItems = source._uniqueItems
      _multipleOf = source._multipleOf
      _enum = source._enum
      _maxProperties = source._maxProperties
      _minProperties = source._minProperties
      _required = source._required
      _items = source._items
      _allOf = source._allOf
      _oneOf = source._oneOf
      _anyOf = source._anyOf
      _not = source._not
      _properties = source._properties
      _additionalProperties = source._additionalProperties
      _patternProperties = source._patternProperties
      _dependencies = source._dependencies
      _additionalItems = source._additionalItems
      _definitions = source._definitions
      _externalDocs = source._externalDocs
      _example = source._example
      _nullable = source._nullable
      _xKubernetesPreserveUnknownFields = source._xKubernetesPreserveUnknownFields
      _xKubernetesEmbeddedResource = source._xKubernetesEmbeddedResource
      _xKubernetesIntOrString = source._xKubernetesIntOrString
      _xKubernetesListMapKeys = source._xKubernetesListMapKeys
      _xKubernetesListType = source._xKubernetesListType
      _xKubernetesMapType = source._xKubernetesMapType
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._id)
        case 2: try decoder.decodeSingularStringField(value: &_storage._schema)
        case 3: try decoder.decodeSingularStringField(value: &_storage._ref)
        case 4: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 5: try decoder.decodeSingularStringField(value: &_storage._type)
        case 6: try decoder.decodeSingularStringField(value: &_storage._format)
        case 7: try decoder.decodeSingularStringField(value: &_storage._title)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._default)
        case 9: try decoder.decodeSingularDoubleField(value: &_storage._maximum)
        case 10: try decoder.decodeSingularBoolField(value: &_storage._exclusiveMaximum)
        case 11: try decoder.decodeSingularDoubleField(value: &_storage._minimum)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._exclusiveMinimum)
        case 13: try decoder.decodeSingularInt64Field(value: &_storage._maxLength)
        case 14: try decoder.decodeSingularInt64Field(value: &_storage._minLength)
        case 15: try decoder.decodeSingularStringField(value: &_storage._pattern)
        case 16: try decoder.decodeSingularInt64Field(value: &_storage._maxItems)
        case 17: try decoder.decodeSingularInt64Field(value: &_storage._minItems)
        case 18: try decoder.decodeSingularBoolField(value: &_storage._uniqueItems)
        case 19: try decoder.decodeSingularDoubleField(value: &_storage._multipleOf)
        case 20: try decoder.decodeRepeatedMessageField(value: &_storage._enum)
        case 21: try decoder.decodeSingularInt64Field(value: &_storage._maxProperties)
        case 22: try decoder.decodeSingularInt64Field(value: &_storage._minProperties)
        case 23: try decoder.decodeRepeatedStringField(value: &_storage._required)
        case 24: try decoder.decodeSingularMessageField(value: &_storage._items)
        case 25: try decoder.decodeRepeatedMessageField(value: &_storage._allOf)
        case 26: try decoder.decodeRepeatedMessageField(value: &_storage._oneOf)
        case 27: try decoder.decodeRepeatedMessageField(value: &_storage._anyOf)
        case 28: try decoder.decodeSingularMessageField(value: &_storage._not)
        case 29: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: &_storage._properties)
        case 30: try decoder.decodeSingularMessageField(value: &_storage._additionalProperties)
        case 31: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: &_storage._patternProperties)
        case 32: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray>.self, value: &_storage._dependencies)
        case 33: try decoder.decodeSingularMessageField(value: &_storage._additionalItems)
        case 34: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: &_storage._definitions)
        case 35: try decoder.decodeSingularMessageField(value: &_storage._externalDocs)
        case 36: try decoder.decodeSingularMessageField(value: &_storage._example)
        case 37: try decoder.decodeSingularBoolField(value: &_storage._nullable)
        case 38: try decoder.decodeSingularBoolField(value: &_storage._xKubernetesPreserveUnknownFields)
        case 39: try decoder.decodeSingularBoolField(value: &_storage._xKubernetesEmbeddedResource)
        case 40: try decoder.decodeSingularBoolField(value: &_storage._xKubernetesIntOrString)
        case 41: try decoder.decodeRepeatedStringField(value: &_storage._xKubernetesListMapKeys)
        case 42: try decoder.decodeSingularStringField(value: &_storage._xKubernetesListType)
        case 43: try decoder.decodeSingularStringField(value: &_storage._xKubernetesMapType)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._id {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      }
      if let v = _storage._schema {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._ref {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = _storage._description_p {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      }
      if let v = _storage._type {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      }
      if let v = _storage._format {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      }
      if let v = _storage._title {
        try visitor.visitSingularStringField(value: v, fieldNumber: 7)
      }
      if let v = _storage._default {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
      if let v = _storage._maximum {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 9)
      }
      if let v = _storage._exclusiveMaximum {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 10)
      }
      if let v = _storage._minimum {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 11)
      }
      if let v = _storage._exclusiveMinimum {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 12)
      }
      if let v = _storage._maxLength {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 13)
      }
      if let v = _storage._minLength {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 14)
      }
      if let v = _storage._pattern {
        try visitor.visitSingularStringField(value: v, fieldNumber: 15)
      }
      if let v = _storage._maxItems {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 16)
      }
      if let v = _storage._minItems {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 17)
      }
      if let v = _storage._uniqueItems {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 18)
      }
      if let v = _storage._multipleOf {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 19)
      }
      if !_storage._enum.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._enum, fieldNumber: 20)
      }
      if let v = _storage._maxProperties {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 21)
      }
      if let v = _storage._minProperties {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 22)
      }
      if !_storage._required.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._required, fieldNumber: 23)
      }
      if let v = _storage._items {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      }
      if !_storage._allOf.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._allOf, fieldNumber: 25)
      }
      if !_storage._oneOf.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._oneOf, fieldNumber: 26)
      }
      if !_storage._anyOf.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._anyOf, fieldNumber: 27)
      }
      if let v = _storage._not {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 28)
      }
      if !_storage._properties.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: _storage._properties, fieldNumber: 29)
      }
      if let v = _storage._additionalProperties {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
      if !_storage._patternProperties.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: _storage._patternProperties, fieldNumber: 31)
      }
      if !_storage._dependencies.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray>.self, value: _storage._dependencies, fieldNumber: 32)
      }
      if let v = _storage._additionalItems {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 33)
      }
      if !_storage._definitions.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps>.self, value: _storage._definitions, fieldNumber: 34)
      }
      if let v = _storage._externalDocs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 35)
      }
      if let v = _storage._example {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 36)
      }
      if let v = _storage._nullable {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 37)
      }
      if let v = _storage._xKubernetesPreserveUnknownFields {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 38)
      }
      if let v = _storage._xKubernetesEmbeddedResource {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 39)
      }
      if let v = _storage._xKubernetesIntOrString {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 40)
      }
      if !_storage._xKubernetesListMapKeys.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._xKubernetesListMapKeys, fieldNumber: 41)
      }
      if let v = _storage._xKubernetesListType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 42)
      }
      if let v = _storage._xKubernetesMapType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 43)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._id != rhs_storage._id {return false}
        if _storage._schema != rhs_storage._schema {return false}
        if _storage._ref != rhs_storage._ref {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._type != rhs_storage._type {return false}
        if _storage._format != rhs_storage._format {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._default != rhs_storage._default {return false}
        if _storage._maximum != rhs_storage._maximum {return false}
        if _storage._exclusiveMaximum != rhs_storage._exclusiveMaximum {return false}
        if _storage._minimum != rhs_storage._minimum {return false}
        if _storage._exclusiveMinimum != rhs_storage._exclusiveMinimum {return false}
        if _storage._maxLength != rhs_storage._maxLength {return false}
        if _storage._minLength != rhs_storage._minLength {return false}
        if _storage._pattern != rhs_storage._pattern {return false}
        if _storage._maxItems != rhs_storage._maxItems {return false}
        if _storage._minItems != rhs_storage._minItems {return false}
        if _storage._uniqueItems != rhs_storage._uniqueItems {return false}
        if _storage._multipleOf != rhs_storage._multipleOf {return false}
        if _storage._enum != rhs_storage._enum {return false}
        if _storage._maxProperties != rhs_storage._maxProperties {return false}
        if _storage._minProperties != rhs_storage._minProperties {return false}
        if _storage._required != rhs_storage._required {return false}
        if _storage._items != rhs_storage._items {return false}
        if _storage._allOf != rhs_storage._allOf {return false}
        if _storage._oneOf != rhs_storage._oneOf {return false}
        if _storage._anyOf != rhs_storage._anyOf {return false}
        if _storage._not != rhs_storage._not {return false}
        if _storage._properties != rhs_storage._properties {return false}
        if _storage._additionalProperties != rhs_storage._additionalProperties {return false}
        if _storage._patternProperties != rhs_storage._patternProperties {return false}
        if _storage._dependencies != rhs_storage._dependencies {return false}
        if _storage._additionalItems != rhs_storage._additionalItems {return false}
        if _storage._definitions != rhs_storage._definitions {return false}
        if _storage._externalDocs != rhs_storage._externalDocs {return false}
        if _storage._example != rhs_storage._example {return false}
        if _storage._nullable != rhs_storage._nullable {return false}
        if _storage._xKubernetesPreserveUnknownFields != rhs_storage._xKubernetesPreserveUnknownFields {return false}
        if _storage._xKubernetesEmbeddedResource != rhs_storage._xKubernetesEmbeddedResource {return false}
        if _storage._xKubernetesIntOrString != rhs_storage._xKubernetesIntOrString {return false}
        if _storage._xKubernetesListMapKeys != rhs_storage._xKubernetesListMapKeys {return false}
        if _storage._xKubernetesListType != rhs_storage._xKubernetesListType {return false}
        if _storage._xKubernetesMapType != rhs_storage._xKubernetesMapType {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".JSONSchemaPropsOrArray"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "schema"),
    2: .same(proto: "jSONSchemas"),
  ]

  fileprivate class _StorageClass {
    var _schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps? = nil
    var _jSonschemas: [K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _schema = source._schema
      _jSonschemas = source._jSonschemas
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._schema)
        case 2: try decoder.decodeRepeatedMessageField(value: &_storage._jSonschemas)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._schema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._jSonschemas.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._jSonschemas, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrArray) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._schema != rhs_storage._schema {return false}
        if _storage._jSonschemas != rhs_storage._jSonschemas {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".JSONSchemaPropsOrBool"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "allows"),
    2: .same(proto: "schema"),
  ]

  fileprivate class _StorageClass {
    var _allows: Bool? = nil
    var _schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _allows = source._allows
      _schema = source._schema
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._allows)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._schema)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._allows {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
      }
      if let v = _storage._schema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrBool) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._allows != rhs_storage._allows {return false}
        if _storage._schema != rhs_storage._schema {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".JSONSchemaPropsOrStringArray"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "schema"),
    2: .same(proto: "property"),
  ]

  fileprivate class _StorageClass {
    var _schema: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaProps? = nil
    var _property: [String] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _schema = source._schema
      _property = source._property
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._schema)
        case 2: try decoder.decodeRepeatedStringField(value: &_storage._property)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._schema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._property.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._property, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_JSONSchemaPropsOrStringArray) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._schema != rhs_storage._schema {return false}
        if _storage._property != rhs_storage._property {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ServiceReference"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "namespace"),
    2: .same(proto: "name"),
    3: .same(proto: "path"),
    4: .same(proto: "port"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._namespace)
      case 2: try decoder.decodeSingularStringField(value: &self._name)
      case 3: try decoder.decodeSingularStringField(value: &self._path)
      case 4: try decoder.decodeSingularInt32Field(value: &self._port)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._namespace {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._path {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    if let v = self._port {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference) -> Bool {
    if lhs._namespace != rhs._namespace {return false}
    if lhs._name != rhs._name {return false}
    if lhs._path != rhs._path {return false}
    if lhs._port != rhs._port {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".WebhookClientConfig"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    3: .same(proto: "url"),
    1: .same(proto: "service"),
    2: .same(proto: "caBundle"),
  ]

  fileprivate class _StorageClass {
    var _url: String? = nil
    var _service: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_ServiceReference? = nil
    var _caBundle: Data? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _url = source._url
      _service = source._service
      _caBundle = source._caBundle
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._service)
        case 2: try decoder.decodeSingularBytesField(value: &_storage._caBundle)
        case 3: try decoder.decodeSingularStringField(value: &_storage._url)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._service {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._caBundle {
        try visitor.visitSingularBytesField(value: v, fieldNumber: 2)
      }
      if let v = _storage._url {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig, rhs: K8s_Io_ApiextensionsApiserver_Pkg_Apis_Apiextensions_V1beta1_WebhookClientConfig) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._url != rhs_storage._url {return false}
        if _storage._service != rhs_storage._service {return false}
        if _storage._caBundle != rhs_storage._caBundle {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
